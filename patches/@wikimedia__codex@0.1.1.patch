diff --git a/dist/types/components/text-input/TextInput.vue.d.ts b/dist/types/components/text-input/TextInput.vue.d.ts
index 9077c7170cf811c4033a49eea8bd607d478f10e0..b2493393bac99bc910fb13c99f0ad582de47b199 100644
--- a/dist/types/components/text-input/TextInput.vue.d.ts
+++ b/dist/types/components/text-input/TextInput.vue.d.ts
@@ -13,12 +13,12 @@ declare const _default: import("vue").DefineComponent<{
     /**
      * `type` attribute of the input.
      *
-     * @values 'text', 'search'
+     * @values 'text', 'search', 'number'
      */
     inputType: {
-        type: PropType<"search" | "text">;
+        type: PropType<"search" | "text" | "number">;
         default: string;
-        validator: import("../../types").StringTypeValidator<"search" | "text">;
+        validator: import("../../types").StringTypeValidator<"search" | "text" | "number">;
     };
     /**
      * Whether the input is disabled.
@@ -88,12 +88,12 @@ declare const _default: import("vue").DefineComponent<{
     /**
      * `type` attribute of the input.
      *
-     * @values 'text', 'search'
+     * @values 'text', 'search', 'number'
      */
     inputType: {
-        type: PropType<"search" | "text">;
+        type: PropType<"search" | "text" | "number">;
         default: string;
-        validator: import("../../types").StringTypeValidator<"search" | "text">;
+        validator: import("../../types").StringTypeValidator<"search" | "text" | "number">;
     };
     /**
      * Whether the input is disabled.
@@ -133,7 +133,7 @@ declare const _default: import("vue").DefineComponent<{
     onInput?: ((...args: any[]) => any) | undefined;
     "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
 }, {
-    inputType: "search" | "text";
+    inputType: "search" | "text" | "number";
     disabled: boolean;
     modelValue: string | number;
     startIcon: Icon | undefined;
